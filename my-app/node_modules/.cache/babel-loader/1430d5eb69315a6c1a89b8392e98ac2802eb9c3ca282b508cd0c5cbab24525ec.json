{"ast":null,"code":"var _jsxFileName = \"D:\\\\J e f f r 3 y\\\\Documents\\\\Faculdade\\\\Projeto III\\\\Site  - Casa dos Saberes Cego Aderaldo\\\\siteCegoAderaldo\\\\my-app\\\\src\\\\components\\\\Trabalhos Publicados\\\\Trabalho.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { useParams } from 'react-router-dom';\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trabalho = () => {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pdfData, setPdfData] = useState(null);\n  const {\n    linkPdf\n  } = useParams(\"\");\n  function onDocumentLoadSuccess(_ref) {\n    let {\n      numPages\n    } = _ref;\n    setNumPages(numPages);\n  }\n  useEffect(() => {\n    const fetchPdf = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/pdf/${linkPdf}`);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPdfData(url);\n        return url;\n        console.log(pdfData);\n      } catch (error) {\n        console.error('Erro ao obter o PDF:', error);\n      }\n    };\n    fetchPdf();\n  }, [linkPdf]);\n  const fetchPdf = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/pdf/${linkPdf}`);\n      const blob = await response.blob();\n      const url = URL.createObjectURL(blob);\n      setPdfData(url);\n      return url;\n      console.log(pdfData);\n    } catch (error) {\n      console.error('Erro ao obter o PDF:', error);\n    }\n  };\n  () => fetchPdf();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid rgba(0, 0, 0, 0.3)',\n      width: '30%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Viewer, {\n      fileUrl: linkPdf\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Trabalho, \"lNYRJDmvOeSzqSyP2g2dDb+HlTU=\", false, function () {\n  return [useParams];\n});\n_c = Trabalho;\nexport default Trabalho;\nvar _c;\n$RefreshReg$(_c, \"Trabalho\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","useParams","Worker","Viewer","jsxDEV","_jsxDEV","Trabalho","_s","numPages","setNumPages","pageNumber","setPageNumber","pdfData","setPdfData","linkPdf","onDocumentLoadSuccess","_ref","fetchPdf","response","fetch","blob","url","URL","createObjectURL","console","log","error","style","border","width","children","fileUrl","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J e f f r 3 y/Documents/Faculdade/Projeto III/Site  - Casa dos Saberes Cego Aderaldo/siteCegoAderaldo/my-app/src/components/Trabalhos Publicados/Trabalho.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { Worker, Viewer } from '@react-pdf-viewer/core';\r\n\r\nconst Trabalho = () => {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [pdfData, setPdfData] = useState(null);\r\n\r\n  const { linkPdf } = useParams(\"\");\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchPdf = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/pdf/${linkPdf}`);\r\n        const blob = await response.blob();\r\n        const url = URL.createObjectURL(blob);\r\n        setPdfData(url)\r\n        return(url)\r\n        console.log(pdfData)\r\n      } catch (error) {\r\n        console.error('Erro ao obter o PDF:', error);\r\n      }\r\n    };\r\n\r\n    fetchPdf();\r\n  }, [linkPdf]);\r\n\r\n  const fetchPdf = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:3001/pdf/${linkPdf}`);\r\n      const blob = await response.blob();\r\n      const url = URL.createObjectURL(blob);\r\n      setPdfData(url)\r\n      return(url)\r\n      console.log(pdfData)\r\n    } catch (error) {\r\n      console.error('Erro ao obter o PDF:', error);\r\n    }\r\n  };\r\n\r\n  () => fetchPdf()\r\n\r\n  return (\r\n    <div\r\n    style={{\r\n        border: '1px solid rgba(0, 0, 0, 0.3)',\r\n        width: '30%',\r\n    }}\r\n>\r\n    <Viewer fileUrl = {linkPdf} />\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Trabalho;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM;IAAEiB;EAAQ,CAAC,GAAGb,SAAS,CAAC,EAAE,CAAC;EAEjC,SAASc,qBAAqBA,CAAAC,IAAA,EAAe;IAAA,IAAd;MAAER;IAAS,CAAC,GAAAQ,IAAA;IACzCP,WAAW,CAACD,QAAQ,CAAC;EACvB;EAEAV,SAAS,CAAC,MAAM;IACd,MAAMmB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BL,OAAQ,EAAC,CAAC;QACpE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;QACrCP,UAAU,CAACQ,GAAG,CAAC;QACf,OAAOA,GAAG;QACVG,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;MACtB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDT,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACH,OAAO,CAAC,CAAC;EAEb,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BL,OAAQ,EAAC,CAAC;MACpE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAClC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;MACrCP,UAAU,CAACQ,GAAG,CAAC;MACf,OAAOA,GAAG;MACVG,OAAO,CAACC,GAAG,CAACb,OAAO,CAAC;IACtB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMT,QAAQ,CAAC,CAAC;EAEhB,oBACEZ,OAAA;IACAsB,KAAK,EAAE;MACHC,MAAM,EAAE,8BAA8B;MACtCC,KAAK,EAAE;IACX,CAAE;IAAAC,QAAA,eAEFzB,OAAA,CAACF,MAAM;MAAC4B,OAAO,EAAIjB;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEN,CAAC;AAAC5B,EAAA,CArDID,QAAQ;EAAA,QAKQL,SAAS;AAAA;AAAAmC,EAAA,GALzB9B,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}