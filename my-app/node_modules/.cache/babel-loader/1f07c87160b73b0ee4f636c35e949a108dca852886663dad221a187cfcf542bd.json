{"ast":null,"code":"var _jsxFileName = \"D:\\\\J e f f r 3 y\\\\Documents\\\\Faculdade\\\\Projeto III\\\\Site  - Casa dos Saberes Cego Aderaldo\\\\siteCegoAderaldo\\\\my-app\\\\src\\\\components\\\\Trabalhos Publicados\\\\Trabalho.jsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Trabalho = _ref => {\n  _s();\n  let {\n    url\n  } = _ref;\n  const File = url;\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [pdfData, setPdfData] = useState(null);\n  const fileName = 'url';\n  function onDocumentLoadSuccess(_ref2) {\n    let {\n      numPages\n    } = _ref2;\n    setNumPages(numPages);\n  }\n  useEffect(() => {\n    const fetchPdf = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/pdf/${fileName}`);\n        const blob = await response.blob();\n        const url = URL.createObjectURL(blob);\n        setPdfData(url);\n      } catch (error) {\n        console.error('Erro ao obter o PDF:', error);\n      }\n    };\n    fetchPdf();\n  }, [fileName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Document, {\n      file: File,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Trabalho, \"TFefF945pErmKWBapUcEUgx1TtA=\");\n_c = Trabalho;\nexport default Trabalho;\nvar _c;\n$RefreshReg$(_c, \"Trabalho\");","map":{"version":3,"names":["React","useState","Document","Page","useEffect","axios","jsxDEV","_jsxDEV","Trabalho","_ref","_s","url","File","numPages","setNumPages","pageNumber","setPageNumber","pdfData","setPdfData","fileName","onDocumentLoadSuccess","_ref2","fetchPdf","response","fetch","blob","URL","createObjectURL","error","console","children","file","onLoadSuccess","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/J e f f r 3 y/Documents/Faculdade/Projeto III/Site  - Casa dos Saberes Cego Aderaldo/siteCegoAderaldo/my-app/src/components/Trabalhos Publicados/Trabalho.jsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { useState } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Trabalho = ({url}) =>{\r\n  const File = url\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  const [pdfData, setPdfData] = useState(null);\r\n  const fileName = 'url';\r\n\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchPdf = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/pdf/${fileName}`);\r\n        const blob = await response.blob();\r\n        const url = URL.createObjectURL(blob);\r\n        setPdfData(url);\r\n      } catch (error) {\r\n        console.error('Erro ao obter o PDF:', error);\r\n      }\r\n    };\r\n\r\n    fetchPdf();\r\n  }, [fileName]);\r\n\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Document file={File} onLoadSuccess={onDocumentLoadSuccess}>\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Trabalho"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,QAAQ,GAAGC,IAAA,IAAU;EAAAC,EAAA;EAAA,IAAT;IAACC;EAAG,CAAC,GAAAF,IAAA;EACrB,MAAMG,IAAI,GAAGD,GAAG;EAChB,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMkB,QAAQ,GAAG,KAAK;EAGtB,SAASC,qBAAqBA,CAAAC,KAAA,EAAe;IAAA,IAAd;MAAER;IAAS,CAAC,GAAAQ,KAAA;IACzCP,WAAW,CAACD,QAAQ,CAAC;EACvB;EAEAT,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAA4BL,QAAS,EAAC,CAAC;QACrE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,MAAMd,GAAG,GAAGe,GAAG,CAACC,eAAe,CAACF,IAAI,CAAC;QACrCP,UAAU,CAACP,GAAG,CAAC;MACjB,CAAC,CAAC,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAOd,oBACEZ,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACL,QAAQ;MAAC6B,IAAI,EAAEnB,IAAK;MAACoB,aAAa,EAAEZ,qBAAsB;MAAAU,QAAA,eACzDvB,OAAA,CAACJ,IAAI;QAACY,UAAU,EAAEA;MAAW;QAAAI,QAAA,EAAAc,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAhB,QAAA,EAAAc,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EAAC;IAAAhB,QAAA,EAAAc,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEV,CAAC;AAAAzB,EAAA,CAzCKF,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}